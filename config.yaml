app:
  name: "RAG Pipeline"
  host: 0.0.0.0
  port: 8080
  eager_init: false

logging:
  level: INFO

database:
  driver: postgres
  host: ${DB_HOST}
  port: ${DB_PORT}
  name: ${DB_NAME}
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  table: properties
  id_column: id
  columns:
    - id
    - property_title
    - property_description
    - property_type_id
    - furnishing_status
    - number_of_bathrooms
    - number_of_bedrooms
    - property_size
    - year_built
    - floor_level
    - emirate
    - city
    - community
    - subcommunity
    - building_name
    - apartment_unit_number
    - nearby_landmarks
    - plot_number
    - developer_name
    - rent_type_id
    - rent_charge
    - lease_duration
    - payment_terms
    - sublease_allowed
    - lease_start_date
    - lease_end_date
    - security_deposit
    - setup_grace_period
    - maintenance_charge
    - maintenance_covered_by
    - parking
    - swimming_pool
    - maids_room
    - security_available
    - concierge_available
    - central_ac_heating
    - elevators
    - balcony_terrace
    - storage_room
    - laundry_room
    - gym_fitness_center
    - childrens_play_area
    - bbq_area
    - pet_friendly
    - smart_home_features
    - waste_disposal_system
    - power_backup
    - mosque_nearby
    - beach_access
    - jogging_cycling_tracks
    - property_view_id
    - unit_number
    - public_transport_type
    - retail_shopping_access
    - available_from
    - tenancy_start_date
    - listing_date
    - chiller_included
    - property_status
    - premiumBoostingStatus
    - carouselBoostingStatus
    - bnb_verification_status
    - media

  # ✅ Semantic fields for embedding (descriptive text content)
  embedding_columns:
    - property_title
    - property_description
    - building_name
    - nearby_landmarks
    - developer_name
    - floor_level
    - apartment_unit_number

  # ✅ Filters for structured fields
  field_types:
    # Text fields for embedding
    property_title: text
    property_description: text
    building_name: text
    nearby_landmarks: text
    developer_name: text
    floor_level: text
    apartment_unit_number: text

    # Location fields
    emirate: keyword
    city: keyword
    community: keyword
    subcommunity: keyword

    # Property type and status
    property_type_id: keyword
    furnishing_status: keyword
    rent_type_id: keyword
    property_status: keyword
    maintenance_covered_by: keyword

    # Numeric fields
    number_of_bedrooms: integer
    number_of_bathrooms: integer
    property_size: float
    year_built: integer
    plot_number: integer
    unit_number: integer
    rent_charge: float
    security_deposit: float
    maintenance_charge: float

    # Boosting and verification
    bnb_verification_status: keyword
    premiumBoostingStatus: keyword
    carouselBoostingStatus: keyword

    # Boolean amenities
    maids_room: boolean
    security_available: boolean
    concierge_available: boolean
    central_ac_heating: boolean
    elevators: boolean
    balcony_terrace: boolean
    storage_room: boolean
    laundry_room: boolean
    gym_fitness_center: boolean
    childrens_play_area: boolean
    bbq_area: boolean
    pet_friendly: boolean
    smart_home_features: boolean
    waste_disposal_system: boolean
    power_backup: boolean
    mosque_nearby: boolean
    beach_access: boolean
    jogging_cycling_tracks: boolean
    chiller_included: boolean
    sublease_allowed: boolean

    # JSON fields
    parking: json
    swimming_pool: json
    public_transport_type: json
    retail_shopping_access: json
    media: json

    # Date fields (stored as strings for filtering)
    lease_start_date: keyword
    lease_end_date: keyword
    available_from: keyword
    tenancy_start_date: keyword
    listing_date: keyword

    # Other fields
    lease_duration: keyword
    payment_terms: keyword
    setup_grace_period: keyword
    property_view_id: keyword

chunking:
  chunk_size: 500
  chunk_overlap: 50
  unit: token

embedding:
  provider: google
  model: gemini-embedding-001 # Explicitly set to gemini-embedding-001
  api_key: ${LLM_MODEL_API_KEY}
  batch_size: 64

vector_db:
  provider: elasticsearch
  hosts:
    - ${VECTOR_DB_HOST}
  username: ${VECTOR_DB_USERNAME}
  password: ${VECTOR_DB_PASSWORD}
  index: rag_properties
  similarity: cosine
  refresh_on_write: false
  dims: 3072 # Correct dimensions for gemini-embedding-001 (default)
  mapping_properties_key: properties

retrieval:
  top_k: 8
  num_candidates_multiplier: 20
  filter_fields:
    # Location filters
    - emirate
    - city
    - community
    - subcommunity

    # Property type and status
    - property_type_id
    - furnishing_status
    - rent_type_id
    - property_status
    - maintenance_covered_by

    # Numeric filters
    - number_of_bedrooms
    - number_of_bathrooms
    - property_size
    - year_built
    - rent_charge
    - security_deposit
    - maintenance_charge

    # Boosting and verification
    - bnb_verification_status
    - premiumBoostingStatus
    - carouselBoostingStatus

    # Boolean amenities
    - maids_room
    - security_available
    - concierge_available
    - central_ac_heating
    - elevators
    - balcony_terrace
    - storage_room
    - laundry_room
    - gym_fitness_center
    - childrens_play_area
    - bbq_area
    - pet_friendly
    - smart_home_features
    - waste_disposal_system
    - power_backup
    - mosque_nearby
    - beach_access
    - jogging_cycling_tracks
    - chiller_included
    - sublease_allowed

    # Date filters
    - available_from
    - lease_start_date
    - lease_end_date
    - tenancy_start_date
    - listing_date

    # Other filters
    - lease_duration
    - developer_name

llm:
  provider: google
  model: ${LLM_MODEL_NAME}
  temperature: 0.2
  max_output_tokens: 1024

ingestion:
  batch_size: 500

# ✅ Fallback Strategy
fallback:
  enable: true
  strategy:
    - check_alternatives
    - requirement_capture
  requirement_capture:
    imp_fields:
      - location
      - property_type_id
      - number_of_bedrooms
      - rent_charge
      - furnishing_status
      - nearby_landmarks
      - building_name
      - rent_type_id
    save_to_table: user_requirements
    ask_confirmation: true

memory:
  type: llm
  strategy:
    keep_last_turns: 10 # keep last 10 exchanges raw
    summarize_older: true # ask LLM to summarize older history
    ttl_seconds: 900 # expire after 15 min of inactivity

# Requirement gathering configuration
requirement_gathering:
  endpoint: "http://localhost:5000/backend/api/v1/user/requirement"
  enabled: true
  auto_save_on_conversation_end: true
  ask_user_confirmation: true
  priority_fields:
    - location
    - property_type_id
    - number_of_bedrooms
    - rent_charge
    - furnishing_status
    - amenities
    - lease_duration
