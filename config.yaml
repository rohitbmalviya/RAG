app:
  name: "RAG Pipeline"
  host: 0.0.0.0
  port: 8000
  eager_init: false

logging:
  level: INFO

database:
  driver: postgres
  # Prefer DB_URL in .env. These fields are fallbacks and will be overridden by DB_URL when set.
  host: ${DB_HOST}
  port: ${DB_PORT}
  name: ${DB_NAME}
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  table: properties
  id_column: id
  columns:
    # ✅ Embedding fields
    - property_title
    - property_description
    - nearby_landmarks
    - building_name

    # ✅ Filter fields (structured search)
    - emirate
    - city
    - district
    - community
    - subcommunity
    - property_type_id
    - rent_type_id
    - furnishing_status
    - number_of_bedrooms
    - number_of_bathrooms
    - property_size
    - rent_charge
    - bnb_verification_status
    - premiumBoostingStatus
    - carouselBoostingStatus
    - property_status

chunking:
  chunk_size: 500
  chunk_overlap: 50
  unit: token # "token" or "char"

embedding:
  provider: google
  model: ${GOOGLE_GEMINI_EMBED_MODEL}
  api_key: ${GOOGLE_API_KEY}
  batch_size: 64

vector_db:
  provider: elasticsearch
  hosts:
    - ${ELASTIC_HOST}
  username: ${ELASTIC_USERNAME}
  password: ${ELASTIC_PASSWORD}
  index: rag_properties
  similarity: cosine
  refresh_on_write: false
  dims: 3072

retrieval:
  top_k: 8
  num_candidates_multiplier: 20
  filter_fields:
    - emirate
    - city
    - district
    - community
    - subcommunity
    - property_type_id
    - rent_type_id
    - furnishing_status
    - number_of_bedrooms
    - number_of_bathrooms
    - rent_charge_min
    - rent_charge_max
    - property_size_min
    - property_size_max
    - bnb_verification_status
    - premiumBoostingStatus
    - carouselBoostingStatus
    - property_status

llm:
  provider: google
  model: ${GOOGLE_GEMINI_MODEL}
  temperature: 0.2
  max_output_tokens: 1024

ingestion:
  batch_size: 500
